



/*Auto generated file. Do not edit this file*/
/*Auto generated file. Do not edit this file*/
/*Auto generated file. Do not edit this file*/

﻿using System;
using System.IO;
using V8.Net;
using System.Diagnostics;

namespace TypeScriptLanguageService { 

   public interface ITypeScriptLanguageServices{

        void  CleanupSemanticCache ( );

        Diagnostic[]  GetSyntacticDiagnostics (   string fileName);

        Diagnostic[]  GetSemanticDiagnostics (   string fileName);

        Diagnostic[]  GetCompilerOptionsDiagnostics ( );

        ClassifiedSpan[]  GetSyntacticClassifications (   string fileName,  TextSpan span);

        ClassifiedSpan[]  GetSemanticClassifications (   string fileName,  TextSpan span);

        CompletionInfo  GetCompletionsAtPosition (   string fileName,  int position);

        CompletionEntryDetails  GetCompletionEntryDetails (   string fileName,  int position,  string entryName);

        QuickInfo  GetQuickInfoAtPosition (   string fileName,  int position);

        TextSpan  GetNameOrDottedNameSpan (   string fileName,  int startPos,  int endPos);

        TextSpan  GetBreakpointStatementAtPosition (   string fileName,  int position);

        SignatureHelpItems  GetSignatureHelpItems (   string fileName,  int position);

        RenameInfo  GetRenameInfo (   string fileName,  int position);

        RenameLocation[]  FindRenameLocations (   string fileName,  int position,  bool findInStrings,  bool findInComments);

        DefinitionInfo[]  GetDefinitionAtPosition (   string fileName,  int position);

        ReferenceEntry[]  GetReferencesAtPosition (   string fileName,  int position);

        ReferenceEntry[]  GetOccurrencesAtPosition (   string fileName,  int position);

        NavigateToItem[]  GetNavigateToItems (   string searchValue,  int maxResultCount);

        NavigationBarItem[]  GetNavigationBarItems (   string fileName);

        OutliningSpan[]  GetOutliningSpans (   string fileName);

        TodoComment[]  GetTodoComments (   string fileName,  TodoCommentDescriptor[] descriptors);

        TextSpan[]  GetBraceMatchingAtPosition (   string fileName,  int position);

        int  GetIndentationAtPosition (   string fileName,  int position,  EditorOptions options);

        TextChange[]  GetFormattingEditsForRange (   string fileName,  int start,  int end,  FormatCodeOptions options);

        TextChange[]  GetFormattingEditsForDocument (   string fileName,  FormatCodeOptions options);

        TextChange[]  GetFormattingEditsAfterKeystroke (   string fileName,  int position,  string key,  FormatCodeOptions options);

        EmitOutput  GetEmitOutput (   string fileName);

        Program  GetProgram ( );

        SourceFile  GetSourceFile (   string fileName);

        void  Dispose ( );
    }
} 

/*Auto generated file. Do not edit this file*/
/*Auto generated file. Do not edit this file*/
/*Auto generated file. Do not edit this file*/

